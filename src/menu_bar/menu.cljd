(ns menu-bar.menu
  (:require
   ["package:flutter/material.dart" :as m]
   ["package:mongol/mongol.dart" :as mgl]
   [cljd.flutter :as f]
   [menu-bar.options :as options]
   [menu-bar.menu-item :as menu-item]
   [menu-bar.menu-bar :as menu-bar]
   [menu-bar.utils :as utils]))

;; Helper function: create text style with font configuration support
(defn create-text-style
  "Create text style based on font configuration, use defaults if not provided"
  [font-config]
  (let [font-size (or (:font-size font-config) (:font-size (:text-style options/menu-item)))
        font-family (or (:font-family font-config) (:font-family (:text-style options/menu-item)))
        font-color (or (:font-color font-config) (:color (:text-style options/menu-item)))
        font-weight (or (:font-weight font-config) m.FontWeight/normal)
        font-style (or (:font-style font-config) m.FontStyle/normal)]
    (m/TextStyle .fontSize font-size
                 .fontFamily font-family
                 .color font-color
                 .fontWeight font-weight
                 .fontStyle font-style)))

(defn menu
  [info items]
  (if (empty? items)

    (m/Container)

    (f/widget
     :context ctx
     :let [font-config (:font-config info)  ; Get font config from info
           text-style (if font-config
                        (create-text-style font-config)
                        (:text-style options/menu-item))  ; Use default if not configured
           item-info (merge options/menu-item
                            (:item info)
                            {:text-style text-style})  ; Use generated text style
           ^m/EdgeInsets edge-insets (:padding item-info)
           max-height (+ (.-top edge-insets)
                         (.-bottom edge-insets)
                         (apply max
                                (map #(utils/compute-text-width
                                       %
                                       (:text-style item-info)
                                       ctx)
                                     items)))
           bar-info (merge options/menu-bar
                           (:bar info)
                           {:max-height max-height})
           items (map #(menu-item/menu-item item-info %)
                      items)]
     (m/Padding
      .padding (.all m/EdgeInsets 20))
     (menu-bar/menu-bar bar-info items))))
